name: Continuous Integration & Delivery

on:
  push:
    branches:
    - master
    - develop
  pull_request:
    branches:
    - master
  workflow_dispatch:
    inputs:
      repository:
        description: "Choose repository to publish"
        required: true
        default: "testpypi"
        type: choice
        options:
        - testpypi
        - pypi

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
        - python: '3.10'
          django: 3.2
          toxenv: py310-django32
        - python: '3.10'
          django: 4.0
          toxenv: py310-django40
        - python: '3.10'
          django: 4.2
          toxenv: py310-django42
        - python: '3.10'
          django: 5.0
          toxenv: py310-django50
        - python: '3.10'
          django: 5.1
          toxenv: py310-django51
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python }}
    - name: Install pip packages
      run: |
        pip install --upgrade pip
        pip install codecov poetry tox
    - name: "Run tox - testenv: ${{ matrix.toxenv }}"
      env:
        DJANGO: ${{ matrix.django }}
        TOXENV: ${{ matrix.toxenv }}
      run: tox

  quality:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
        - python: '3.10'
          toxenv: quality
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python }}
    - run: pip install --upgrade pip poetry tox
    - name: "Run tox - quality"
      env:
        TOXENV: ${{ matrix.toxenv }}
      run: tox

  security:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
        - python: '3.10'
          toxenv: security
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python }}
    - run: pip install --upgrade pip poetry tox
    - name: "Run tox - security"
      env:
        TOXENV: ${{ matrix.toxenv }}
      run: tox

  publish:
    needs:
    - test
    - security
    - quality
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v1
      with:
        python-version: '3.10'
    - name: Install pip packages
      run: |
        pip install pip --upgrade
        pip install poetry tox
    - name: Bump package version
      run: ./scripts/bump.py --dry-run no
    - name: Build package
      run: tox -e build
    - name: Publish to PyPI / TestPyPI
      env:
        PYPI_ACCESS_TOKEN: ${{ secrets.PYPI_ACCESS_TOKEN }}
      run: |
        if [ "${GITHUB_REF##*/}" = "master" ]; then
          echo "Publishing to PyPI..."
          poetry config pypi-token.pypi $PYPI_ACCESS_TOKEN
          poetry publish -r pypi
        elif [ "${GITHUB_REF##*/}" = "develop" ]; then
          echo "Publishing to TestPyPI..."
          poetry config repositories.testpypi https://test.pypi.org/legacy/
          poetry config pypi-token.testpypi $PYPI_ACCESS_TOKEN
          poetry publish -r testpypi
        else
          echo "Not on master or develop, skipping publish."
        fi
